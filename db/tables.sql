CREATE TABLE IF NOT EXISTS user_roles (
  id SERIAL PRIMARY KEY,
  role VARCHAR(255) NOT NULL UNIQUE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_details (
  id SERIAL PRIMARY KEY,
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  role_id INTEGER NOT NULL REFERENCES user_roles (id) ON DELETE CASCADE
);

INSERT INTO user_roles (role) VALUES ('user');

INSERT INTO user_roles (role) VALUES ('admin');

CREATE TABLE IF NOT EXISTS password_reset_tokens (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES user_details(id) ON DELETE CASCADE,
  otp VARCHAR(10) NOT NULL,
  expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
  used BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE password_reset_tokens
ADD CONSTRAINT unique_user_id UNIQUE (user_id);



-- CREATE TABLE for funnels
CREATE TABLE IF NOT EXISTS funnels (
    id SERIAL PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL, -- User ID from JWT 'sub' claim
    name VARCHAR(255) NOT NULL,
    steps JSONB NOT NULL,
    time_window VARCHAR(50) NOT NULL,
    start_time VARCHAR(100),
    end_time VARCHAR(100),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Index for faster user-based lookup
CREATE INDEX IF NOT EXISTS idx_funnels_user_id ON funnels (user_id);